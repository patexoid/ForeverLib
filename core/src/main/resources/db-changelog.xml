<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.0.xsd">
    <changeSet author="patex" id="0">
        <createIndex tableName="BOOK" indexName="BOOK_TITLE_CHECKSUM" unique="false">
            <column name="TITLE"/>
            <column name="CHECKSUM"/>
        </createIndex>
        <addColumn tableName="BOOK">
            <column name="COVER_ID" type="BIGINT">
                <constraints foreignKeyName="BOOK_COVER_FILE_RESOURCE_ID" references="FILE_RESOURCE(ID)"/>
            </column>
        </addColumn>
        <addColumn tableName="FILE_RESOURCE">
            <column name="SIZE" type="INTEGER"/>
            <column name="TYPE" type="VARCHAR(50)"/>
        </addColumn>
        <sql>
            UPDATE FILE_RESOURCE F
            SET size = (SELECT b.SIZE
            FROM BOOK b
            WHERE b.FILE_RESOURCE_ID = F.ID)
        </sql>
    </changeSet>
    <changeSet id="2" author="patex">
        <dropColumn tableName="BOOK" columnName="SIZE"/>
    </changeSet>
    <changeSet id="3" author="patex">
        <addColumn tableName="SAVED_BOOK">
            <column name="FAILED_DOWNLOAD_COUNT" type="INTEGER" defaultValueNumeric="0"/>
        </addColumn>
    </changeSet>
    <changeSet id="4" author="patex">
        <addColumn tableName="AUTHOR">
            <column name="UPDATED" type="TIMESTAMP"/>
        </addColumn>
        <sql>
            UPDATE AUTHOR a
            set UPDATED = (SELECT max(b.CREATED)
            FROM AUTHOR_BOOK ab,
            BOOK b
            where ab.AUTHOR_ID = a.ID
            AND ab.BOOK_ID = b.ID);
        </sql>
    </changeSet>

    <changeSet id="5" author="patex" failOnError="false">
        <sql>
            CREATE INDEX if not exists "author_book_book_id"
                ON "author_book" ("book_id");

            CREATE INDEX if not exists "author_book_author_id"
                ON "author_book" ("author_id");

            CREATE INDEX if not exists "book_sequence_book_id"
                ON "book_sequence" ("book_id");

            CREATE INDEX if not exists "book_sequence_sequence_id"
                ON "book_sequence" ("sequence_id");

            CREATE INDEX if not exists "book_genre_genre_id"
                ON "book_genre" ("genre_id");

            CREATE INDEX if not exists "BOOK_GENRE_BOOK_ID"
                ON "BOOK_GENRE" ("BOOK_ID");
        </sql>
    </changeSet>
    <changeSet id="6" author="patex" failOnError="false" >
        <comment>
            not working on h2 db that used in test //TODO fix it
        </comment>
        <sql>
            create index if not exists UPPER_CASE_AUTHOR_NAME
                on AUTHOR (upper("NAME"::text));

            CREATE INDEX if not exists "AUTHOR_NAME_PREFIX"
                ON "AUTHOR" ("NAME" varchar_pattern_ops);

        </sql>
    </changeSet>
    <changeSet id="7" author="patex">
        <addColumn tableName="BOOK">
            <column name="LANG" type="VARCHAR(50)"/>
            <column name="SRC_LANG" type="VARCHAR(50)"/>
        </addColumn>
        <createTable tableName="AUTHOR_LANG">
            <column autoIncrement="true" name="ID" type="BIGINT">
                <constraints primaryKey="true" primaryKeyName="CONSTRAINT_AUTHOR_LANG_ID"/>
            </column>
            <column name="AUTHOR_ID" type="BIGINT">
                <constraints foreignKeyName="AUTHOR_BOOK_AUTHOR_ID" references="AUTHOR(ID)"/>
            </column>
            <column name="LANG" type="VARCHAR(50)"/>
        </createTable>
        <createIndex tableName="AUTHOR_LANG" indexName="AUTHOR_LANG_LANG_AUTHOR" unique="true">
            <column name="LANG"/>
            <column name="AUTHOR_ID"/>
        </createIndex>
    </changeSet>
    <changeSet id="8" author="patex">
        <addColumn tableName="BOOK">
            <column name="LANG_FB2" type="VARCHAR(50)"/>
        </addColumn>
    </changeSet>
</databaseChangeLog>